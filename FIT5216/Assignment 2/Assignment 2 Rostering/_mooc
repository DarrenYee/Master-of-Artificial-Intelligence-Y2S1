{
    "assignmentKey": "c2QGQWR1FM",
    "history": {
        "files": {
            "models/nroster.mzn": {
                "changes": [
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955391.256
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955407.219
                    },
                    {
                        "edits": [
                            {
                                "line": 69,
                                "text": "% (A1) Loops through all nurses that are rostered off from the given rostered_off and ensures that we do not assign any shifts to them",
                                "type": "deletion"
                            },
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% % (A1) Loops through all nurses that are rostered off from the given rostered_off and ensures that we do not assign any shifts to them",
                                "type": "insertion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 72,
                                "text": "% (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "deletion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% % (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "insertion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955683.012
                    },
                    {
                        "edits": [
                            {
                                "line": 72,
                                "text": "% % (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "deletion"
                            },
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "insertion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955734.897
                    },
                    {
                        "edits": [
                            {
                                "line": 69,
                                "text": "% % (A1) Loops through all nurses that are rostered off from the given rostered_off and ensures that we do not assign any shifts to them",
                                "type": "deletion"
                            },
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% (A1) Loops through all nurses that are rostered off from the given rostered_off and ensures that we do not assign any shifts to them",
                                "type": "insertion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 72,
                                "text": "% (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "deletion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% % (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "insertion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955825.074
                    },
                    {
                        "edits": [
                            {
                                "line": 72,
                                "text": "% % (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "deletion"
                            },
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% (A2) Applies the regular constraint according to the transition array mentioned above",
                                "type": "insertion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955875.937
                    },
                    {
                        "edits": [
                            {
                                "line": 75,
                                "text": "% (B1) Each Shift s for each d has at least minshift [s,d] (Global constraint used = global cardinality)",
                                "type": "deletion"
                            },
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% % (B1) Each Shift s for each d has at least minshift [s,d] (Global constraint used = global cardinality)",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955884.6
                    },
                    {
                        "edits": [
                            {
                                "line": 75,
                                "text": "% % (B1) Each Shift s for each d has at least minshift [s,d] (Global constraint used = global cardinality)",
                                "type": "deletion"
                            },
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% (B1) Each Shift s for each d has at least minshift [s,d] (Global constraint used = global cardinality)",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            },
                            {
                                "line": 84,
                                "text": "% (B2) Auxiliary array to represents whether the shift assigned is off (used to prevent usage ot bool2int within array)",
                                "type": "deletion"
                            },
                            {
                                "line": 85,
                                "text": "array [NURSE,DAYS] of var 0..1: sh_off;",
                                "type": "deletion"
                            },
                            {
                                "line": 86,
                                "text": "array [NURSE,DAYS] of var 0..1: sh_nigh;",
                                "type": "deletion"
                            },
                            {
                                "line": 87,
                                "text": "% % (B2) Auxiliary array to represents whether the shift assigned is off (used to prevent usage ot bool2int within array)",
                                "type": "insertion"
                            },
                            {
                                "line": 87,
                                "text": "% array [NURSE,DAYS] of var 0..1: sh_off;",
                                "type": "insertion"
                            },
                            {
                                "line": 87,
                                "text": "% array [NURSE,DAYS] of var 0..1: sh_nigh;",
                                "type": "insertion"
                            },
                            {
                                "line": 88,
                                "text": "% (B2) Create auxiliary array to convert into boolean context for sliding sum",
                                "type": "deletion"
                            },
                            {
                                "line": 89,
                                "text": "constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "deletion"
                            },
                            {
                                "line": 90,
                                "text": "% % (B2) Create auxiliary array to convert into boolean context for sliding sum",
                                "type": "insertion"
                            },
                            {
                                "line": 90,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "insertion"
                            },
                            {
                                "line": 91,
                                "text": "% (B2) Perform sliding sum on the array created to enforce constraints listed in B2",
                                "type": "deletion"
                            },
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% % (B2) Perform sliding sum on the array created to enforce constraints listed in B2",
                                "type": "insertion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955923.121
                    },
                    {
                        "edits": [
                            {
                                "line": 84,
                                "text": "% % (B2) Auxiliary array to represents whether the shift assigned is off (used to prevent usage ot bool2int within array)",
                                "type": "deletion"
                            },
                            {
                                "line": 85,
                                "text": "% array [NURSE,DAYS] of var 0..1: sh_off;",
                                "type": "deletion"
                            },
                            {
                                "line": 86,
                                "text": "% array [NURSE,DAYS] of var 0..1: sh_nigh;",
                                "type": "deletion"
                            },
                            {
                                "line": 87,
                                "text": "% (B2) Auxiliary array to represents whether the shift assigned is off (used to prevent usage ot bool2int within array)",
                                "type": "insertion"
                            },
                            {
                                "line": 87,
                                "text": "array [NURSE,DAYS] of var 0..1: sh_off;",
                                "type": "insertion"
                            },
                            {
                                "line": 87,
                                "text": "array [NURSE,DAYS] of var 0..1: sh_nigh;",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955931.174
                    },
                    {
                        "edits": [
                            {
                                "line": 88,
                                "text": "% % (B2) Create auxiliary array to convert into boolean context for sliding sum",
                                "type": "deletion"
                            },
                            {
                                "line": 89,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "deletion"
                            },
                            {
                                "line": 90,
                                "text": "% (B2) Create auxiliary array to convert into boolean context for sliding sum",
                                "type": "insertion"
                            },
                            {
                                "line": 90,
                                "text": "constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955941.305
                    },
                    {
                        "edits": [
                            {
                                "line": 91,
                                "text": "% % (B2) Perform sliding sum on the array created to enforce constraints listed in B2",
                                "type": "deletion"
                            },
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% (B2) Perform sliding sum on the array created to enforce constraints listed in B2",
                                "type": "insertion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            },
                            {
                                "line": 95,
                                "text": "constraint total_cost = (sum(n in NURSE,d in DAYS) (sh_off[n,d]* shift_cost[n]));",
                                "type": "deletion"
                            },
                            {
                                "line": 96,
                                "text": "% constraint total_cost = (sum(n in NURSE,d in DAYS) (sh_off[n,d]* shift_cost[n]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713955965.791
                    },
                    {
                        "edits": [
                            {
                                "line": 95,
                                "text": "% constraint total_cost = (sum(n in NURSE,d in DAYS) (sh_off[n,d]* shift_cost[n]));",
                                "type": "deletion"
                            },
                            {
                                "line": 96,
                                "text": "constraint total_cost = (sum(n in NURSE,d in DAYS) (sh_off[n,d]* shift_cost[n]));",
                                "type": "insertion"
                            },
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956012.58
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956021.321
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956042.467
                    },
                    {
                        "edits": [
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956078.617
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956134.988
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956505.86
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956522.985
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            },
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956537.64
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            },
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956556.671
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956579.091
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            },
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956619.588
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956649.747
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956678.439
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956695.329
                    },
                    {
                        "edits": [
                            {
                                "line": 120,
                                "text": "",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956713.917
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956717.076
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956735.539
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            },
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956754.192
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            },
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956806.911
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956827.116
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956834.396
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956848.906
                    },
                    {
                        "edits": [
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956856.103
                    },
                    {
                        "edits": [
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956868.618
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956902.689
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956922.398
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956938.171
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956953.253
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956965.344
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956974.407
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956988.377
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713956993.351
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957013.952
                    },
                    {
                        "edits": [
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957026.407
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957055.849
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957075.536
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            },
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957093.684
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            },
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957113.199
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957128.916
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957134.466
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957153.207
                    },
                    {
                        "edits": [
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957168.644
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957287.271
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957339.626
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957363.367
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957366.458
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            },
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957390.78
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957404.096
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957412.051
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            },
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957436.635
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957454.585
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957489.922
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957578.349
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957615.889
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957723.171
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957755.042
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957766.754
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957901.06
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957904.744
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957937.906
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957942.223
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957966.545
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957972.607
                    },
                    {
                        "edits": [
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957977.527
                    },
                    {
                        "edits": [
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957993.336
                    },
                    {
                        "edits": [
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713957996.228
                    },
                    {
                        "edits": [
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958004.424
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958019.268
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958038.851
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958071.104
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958095.114
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958097.938
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958113.54
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958136.014
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958147.6
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958152.905
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958164.435
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958172.206
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958185.323
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958188.69
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958199.885
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958287.578
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958312.387
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958315.965
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958334.313
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958337.177
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958356.167
                    },
                    {
                        "edits": [
                            {
                                "line": 89,
                                "text": "constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "deletion"
                            },
                            {
                                "line": 90,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "insertion"
                            },
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958364.379
                    },
                    {
                        "edits": [
                            {
                                "line": 89,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "deletion"
                            },
                            {
                                "line": 90,
                                "text": "constraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));",
                                "type": "insertion"
                            },
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958388.866
                    },
                    {
                        "edits": [
                            {
                                "line": 98,
                                "text": "array[WARD,DAYS] of var int: count_wd; ",
                                "type": "deletion"
                            },
                            {
                                "line": 99,
                                "text": "% array[WARD,DAYS] of var int: count_wd; ",
                                "type": "insertion"
                            },
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958393.676
                    },
                    {
                        "edits": [
                            {
                                "line": 98,
                                "text": "% array[WARD,DAYS] of var int: count_wd; ",
                                "type": "deletion"
                            },
                            {
                                "line": 99,
                                "text": "array[WARD,DAYS] of var int: count_wd; ",
                                "type": "insertion"
                            },
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958407.648
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958411.599
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            },
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958440.216
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958471.657
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958475.641
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958487.911
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958557.726
                    },
                    {
                        "edits": [
                            {
                                "line": 70,
                                "text": "% constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "deletion"
                            },
                            {
                                "line": 71,
                                "text": "constraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));",
                                "type": "insertion"
                            },
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958605.566
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958621.604
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958623.831
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958648.961
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958654.944
                    },
                    {
                        "edits": [
                            {
                                "line": 92,
                                "text": "% constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 93,
                                "text": "constraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958670.934
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958675.353
                    },
                    {
                        "edits": [
                            {
                                "line": 100,
                                "text": "% % (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "deletion"
                            },
                            {
                                "line": 101,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "deletion"
                            },
                            {
                                "line": 102,
                                "text": "% (D1) Calculates the number of nurses assigned to the ward on that particular day",
                                "type": "insertion"
                            },
                            {
                                "line": 102,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));",
                                "type": "insertion"
                            },
                            {
                                "line": 103,
                                "text": "% % (D1) Constraints count to be minward at least ",
                                "type": "deletion"
                            },
                            {
                                "line": 104,
                                "text": "% constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "deletion"
                            },
                            {
                                "line": 105,
                                "text": "% (D1) Constraints count to be minward at least ",
                                "type": "insertion"
                            },
                            {
                                "line": 105,
                                "text": "constraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);",
                                "type": "insertion"
                            },
                            {
                                "line": 106,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958698.518
                    },
                    {
                        "edits": [
                            {
                                "line": 106,
                                "text": "% % (D2) Distinct wards for maxward constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 107,
                                "text": "% array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "deletion"
                            },
                            {
                                "line": 108,
                                "text": "% (D2) Distinct wards for maxward constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 108,
                                "text": "array [NURSE] of var 1..maxward : distinct_wards;",
                                "type": "insertion"
                            },
                            {
                                "line": 109,
                                "text": "% % (D2) Calculate distinct ward using nvalue constraint",
                                "type": "deletion"
                            },
                            {
                                "line": 110,
                                "text": "% constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "deletion"
                            },
                            {
                                "line": 111,
                                "text": "% (D2) Calculate distinct ward using nvalue constraint",
                                "type": "insertion"
                            },
                            {
                                "line": 111,
                                "text": "constraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713958721.895
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713960242.797
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "  (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%   (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "% ));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713961398.334
                    },
                    {
                        "edits": [
                            {
                                "line": 76,
                                "text": "% constraint forall (day in DAYS) ",
                                "type": "deletion"
                            },
                            {
                                "line": 77,
                                "text": "%   (global_cardinality (",
                                "type": "deletion"
                            },
                            {
                                "line": 78,
                                "text": "%     [sh[n,day] | n in NURSE],",
                                "type": "deletion"
                            },
                            {
                                "line": 79,
                                "text": "%     [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "deletion"
                            },
                            {
                                "line": 80,
                                "text": "%     [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "deletion"
                            },
                            {
                                "line": 81,
                                "text": "%     [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "deletion"
                            },
                            {
                                "line": 82,
                                "text": "% ));",
                                "type": "deletion"
                            },
                            {
                                "line": 83,
                                "text": "constraint forall (day in DAYS) ",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "  (global_cardinality (",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [sh[n,day] | n in NURSE],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [MORN, DAY, EVEN, NIGH, OFF],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]",
                                "type": "insertion"
                            },
                            {
                                "line": 83,
                                "text": "));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713961402.479
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713961471.44
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713961800.962
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713961825.97
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713961835.137
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713963978.771
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713964007.042
                    },
                    {
                        "edits": [
                            {
                                "line": 73,
                                "text": "% constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "deletion"
                            },
                            {
                                "line": 74,
                                "text": "constraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1713964017.113
                    }
                ],
                "snapshot": "% nurse rostering project\n% STAGE A data\nenum NURSE; % set of nurses to roster\nenum SHIFT = { MORN, DAY, EVEN, NIGH, OFF };\nint: nday;     % number of days for roster\nset of int: DAYS = 1..nday; \narray[NURSE,DAYS] of bool: rostered_off; % nurse is guaranteed an off shift\n% STAGE B data\nint: maxweek; % maximum working shifts in any 7 day period\nint: maxnightfort; % maximum night shifts in any 14 day period\nint: minfort; % minimum number of working shifts in any 14 day period\narray[SHIFT,DAYS] of int: minshift; % minimum number of nurses rostered on each shift\nset of int: DAYSPERWEEK = 0..6;\nset of int: DAYSPERFORT = 0..13;\n% STAGE C data\narray[NURSE] of int: shift_cost;  \n% STAGE D data\nenum WARD;  % set of wards to roster\nWARD: dummy; % dummy ward\narray[WARD,DAYS] of int: minward; % minimum number of nurses rostered to each ward\nconstraint forall(d in DAYS)(assert(minward[dummy,d] = 0, \"Dummy ward has non zero minimum on day \\(d)\\n\"));\nint: maxward; % maximum number of wards any nurse can work in the roster period\n% STAGE E data\nenum SKILL;\nSKILL: senior;                         % which skill is senior\narray[NURSE] of set of SKILL: skill;   % skills that each nurse has\narray[WARD] of set of SKILL: required; % particular skills for each ward\nopt WARD: emergency; % emergency ward if its being rostered\nenum SLICE = { PREDAWN, AM, PM, LATE };\n% coverage MORNING = {PREDAWN, AM}, \n%          DAY = {AM,PM} \n%          EVENING = {PM, LATE}, \n%          NIGHT {LATE, PREDAWN of the next day} \nset of SLICE: MORNING_SLICE = {PREDAWN, AM};\nset of SLICE: DAY_SLICE  = {AM, PM};\nset of SLICE: EVENING_SLICE  = {PM, LATE};\nset of SLICE: NIGHT_SLICE  = {LATE, PREDAWN};\n\n%%%% DECISIONS\narray[NURSE,DAYS] of var SHIFT: sh; % shift for each nurse on each day\nvar 0..nday*sum(shift_cost): total_cost;\narray[NURSE,DAYS] of var WARD: wd; % ward rostered for each nurse\n\n\ninclude \"globals.mzn\";\ninclude \"regular.mzn\";  \n\n% (A2) Transition Table for A2\n% MORN = no rules\n% DAY = DAY -> DAY then no rules\n% EVEN = EVEN -> all except for MORN\n% NIGH = No NIGH -> NIGH -> NIGH, NO NIGH -> DAY or MORN\n% OFF = no OFF -> OFF     \narray[1..10,SHIFT] of 0..10: trans =\n      [|1,2,3,4,5  %MORN(1)\n      | 0,8,0,0,0  %DAY(2)\n      | 0,2,3,4,5  %EVEN(3)\n      | 0,0,3,6,5  %NIGH1(4)\n      | 1,2,3,4,9  %OFF1(5)\n      | 0,0,3,7,5  %NIGH2(6)\n      | 0,0,3,0,5  %NIGH3(7)\n      | 1,8,3,4,5  %DAY2(8)\n      | 1,2,3,4,0  %OFF2(9)\n      | 1,2,3,4,5|]; %DUMMY(10)     \n\n% (D) Loops across all shifts such that if their shifts are off then the ward assigned is a dummy ward. This constraint uses the biconditional operator\nconstraint forall (n in NURSE, day in DAYS) (sh[n,day] = OFF <-> wd[n,day] = dummy);\n\n% (A1) Loops through all nurses that are rostered off from the given rostered_off and ensures that we do not assign any shifts to them\nconstraint forall (n in NURSE, day in DAYS) (rostered_off[n,day] -> (sh[n,day] = OFF));\n\n% (A2) Applies the regular constraint according to the transition array mentioned above\nconstraint forall(n in NURSE) (regular ([sh[n,day] |day in DAYS],10,5,trans,10,{1,2,3,4,5,6,7,8,9,10}));\n\n% (B1) Each Shift s for each d has at least minshift [s,d] (Global constraint used = global cardinality)\nconstraint forall (day in DAYS) \n  (global_cardinality (\n    [sh[n,day] | n in NURSE],\n    [MORN, DAY, EVEN, NIGH, OFF],\n    [minshift[MORN,day],minshift[DAY,day],minshift[EVEN,day],minshift[NIGH,day],minshift[OFF,day]],\n    [card(NURSE),card(NURSE),card(NURSE),card(NURSE),card(NURSE)]\n));\n\n% (B2) Auxiliary array to represents whether the shift assigned is off (used to prevent usage ot bool2int within array)\narray [NURSE,DAYS] of var 0..1: sh_off;\narray [NURSE,DAYS] of var 0..1: sh_nigh;\n\n% (B2) Create auxiliary array to convert into boolean context for sliding sum\nconstraint forall (n in NURSE, day in DAYS) (sh_off[n,day] = bool2int(sh[n,day] != OFF) /\\ sh_nigh[n,day] = bool2int(sh[n,day] = NIGH));\n\n% (B2) Perform sliding sum on the array created to enforce constraints listed in B2\nconstraint forall (n in NURSE) (sliding_sum(0, maxweek, 7,[sh_off[n, day] |day in DAYS]) /\\ sliding_sum(minfort, nday, 14,[sh_off[n, day] | day in DAYS]) /\\ sliding_sum(0, maxnightfort, 14,[sh_nigh[n, day] | day in DAYS]));\n\n% (C) Calculate shift cost based on the sh_off array that we have created (if off then no cost, else add cost)\nconstraint total_cost = (sum(n in NURSE,d in DAYS) (sh_off[n,d]* shift_cost[n]));\n\n% (D1) Nurses for that ward on that particular day\narray[WARD,DAYS] of var int: count_wd; \n\n% (D1) Calculates the number of nurses assigned to the ward on that particular day\nconstraint forall (w in WARD, day in DAYS) (count_wd[w,day] = (sum(n in NURSE) (wd[n,day] = w)));\n\n% (D1) Constraints count to be minward at least \nconstraint forall (w in WARD, day in DAYS) (count_wd[w,day] >= minward[w,day]);\n\n% (D2) Distinct wards for maxward constraint\narray [NURSE] of var 1..maxward : distinct_wards;\n\n% (D2) Calculate distinct ward using nvalue constraint\nconstraint forall (n in NURSE) (distinct_wards[n] = nvalue([wd[n,day]|day in DAYS]));\n\n% Part E Incomplete implementation\n% % If wd = ward then ward's speciality has to be on duty\n% set of int: skill_max = 0..card(SKILL) +1;\n% array [NURSE, DAYS] of var skill_max: testing;\n% constraint forall(n in NURSE,day in DAYS)(testing[n,day] =  card(skill[n] intersect required[wd[n,day]]) + (if (required[wd[n,day]] = {}) then 1 else 0 endif));\n% array [WARD,DAYS] of var 0..card(NURSE): testing1; \n% constraint forall (w in WARD, day in DAYS) (if (minward[w,day] > 0) then ((testing1[w,day] = (sum (n in NURSE) (bool2int(wd[n,day] = w)*testing[n,day]))) > 0) endif);\n% For each slice, there must be a senior\n\n% If emergency = True, \n\nsolve minimize total_cost;"
            }
        },
        "parent": "8395556e-30ce-40f1-91ff-214f3d278b25",
        "uuid": "09cc4dd2-02d1-4248-8644-2f90d387184b"
    },
    "modelAssignments": [
        {
            "id": "Jo5NoFv6uP",
            "model": "models/nroster.mzn",
            "name": "Nroster Model 1"
        }
    ],
    "moocName": "FIT5216 S1 2024",
    "moocPasswordString": "Submission token",
    "name": "Assignment 2 Rostering",
    "sendMeta": true,
    "solutionAssignments": [
        {
            "data": "data/nroster01.dzn",
            "id": "nS7XGZTCOF",
            "model": "models/nroster.mzn",
            "name": "Nroster 01",
            "timeout": "30"
        },
        {
            "data": "data/nroster04.dzn",
            "id": "RTIZIAYhIA",
            "model": "models/nroster.mzn",
            "name": "Nroster 04",
            "timeout": "30"
        },
        {
            "data": "data/nroster05.dzn",
            "id": "NOQLz5DmMf",
            "model": "models/nroster.mzn",
            "name": "Nroster 05",
            "timeout": "30"
        },
        {
            "data": "data/nroster06.dzn",
            "id": "KYGMfITU20",
            "model": "models/nroster.mzn",
            "name": "Nroster 06",
            "timeout": "60"
        },
        {
            "data": "data/nroster07.dzn",
            "id": "8EVvVCiubE",
            "model": "models/nroster.mzn",
            "name": "Nroster 07",
            "timeout": "60"
        },
        {
            "data": "data/nroster08.dzn",
            "id": "aQnqLph9Uv",
            "model": "models/nroster.mzn",
            "name": "Nroster 08",
            "timeout": "60"
        },
        {
            "data": "data/nroster09.dzn",
            "id": "RBMh0qZHJm",
            "model": "models/nroster.mzn",
            "name": "Nroster 09",
            "timeout": "60"
        },
        {
            "data": "data/nroster10.dzn",
            "id": "wUIpWQqdoO",
            "model": "models/nroster.mzn",
            "name": "Nroster 10",
            "timeout": "60"
        }
    ],
    "submissionTerms": "This is an individual assignment. Your submission has to be entirely your own work. We will use similarity detection software to detect any attempt at collusion, and the penalties are quite harsh. If in doubt, contact your teaching team with any questions! You may not use large language models such as ChatGPT for any part of this assignment",
    "submissionURL": "https://autograder.optimisation-2020.cloud.edu.au/api/index.php"
}
