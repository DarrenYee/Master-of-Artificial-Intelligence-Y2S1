{
    "assignmentKey": "cLOp89l5H0",
    "history": {
        "files": {
            "models/animal.mzn": {
                "changes": [
                    {
                        "edits": [
                            {
                                "line": 22,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 22,
                                "text": "constraint x[0] = base;",
                                "type": "insertion"
                            },
                            {
                                "line": 22,
                                "text": "constraint forall(i in 2..n) (x[i] != base);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709955776.695
                    },
                    {
                        "edits": [
                            {
                                "line": 23,
                                "text": "constraint x[0] = base;",
                                "type": "deletion"
                            },
                            {
                                "line": 24,
                                "text": "constraint forall(i in 2..n) (x[i] != base);",
                                "type": "deletion"
                            },
                            {
                                "line": 25,
                                "text": "constraint x[0] = base; % first location has to be base",
                                "type": "insertion"
                            },
                            {
                                "line": 25,
                                "text": "constraint forall(i in 2..n) (x[i] != base); % every other location cannot be base",
                                "type": "insertion"
                            },
                            {
                                "line": 25,
                                "text": "constraint forall (i in 1..n) (s[i] = 0)",
                                "type": "insertion"
                            },
                            {
                                "line": 25,
                                "text": "",
                                "type": "insertion"
                            },
                            {
                                "line": 25,
                                "text": "",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709955872.318
                    },
                    {
                        "edits": [
                            {
                                "line": 25,
                                "text": "constraint forall (i in 1..n) (s[i] = 0)",
                                "type": "deletion"
                            },
                            {
                                "line": 26,
                                "text": "constraint forall (i in 1..n) (s[i] = 0) % set all s to 0",
                                "type": "insertion"
                            },
                            {
                                "line": 26,
                                "text": "",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709955924.442
                    },
                    {
                        "edits": [
                            {
                                "line": 25,
                                "text": "constraint forall (i in 1..n) (s[i] = 0) % set all s to 0",
                                "type": "deletion"
                            },
                            {
                                "line": 26,
                                "text": "",
                                "type": "deletion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in 1..n) (s[i] = 0); % set all s to 0",
                                "type": "insertion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] > mind /\\ i != j) ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957010.649
                    },
                    {
                        "edits": [
                            {
                                "line": 26,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] > mind /\\ i != j) ",
                                "type": "deletion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] > mind) ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957032.843
                    },
                    {
                        "edits": [
                            {
                                "line": 26,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] > mind) ",
                                "type": "deletion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] => mind) ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957038.093
                    },
                    {
                        "edits": [
                            {
                                "line": 26,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] => mind) ",
                                "type": "deletion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] >= mind) ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957042.623
                    },
                    {
                        "edits": [
                            {
                                "line": 26,
                                "text": "constraint forall (i in 1..n,j in 1..n) (d[x[i],x[j]] >= mind) ",
                                "type": "deletion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in 1..n,j in 1..n where i!=j) (d[x[i],x[j]] >= mind) ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957153.637
                    },
                    {
                        "edits": [
                            {
                                "line": 25,
                                "text": "constraint forall (i in 1..n) (s[i] = 0); % set all s to 0",
                                "type": "deletion"
                            },
                            {
                                "line": 26,
                                "text": "constraint forall (i in 1..n,j in 1..n where i!=j) (d[x[i],x[j]] >= mind) ",
                                "type": "deletion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in PLACE) (s[i] = 0); % set all s to 0",
                                "type": "insertion"
                            },
                            {
                                "line": 27,
                                "text": "constraint forall (i in PLACE,j in PLACE where i!=j) (d[x[i],x[j]] >= mind); % double for loop through the matrix, ignoring itself and making sure that each locations within x are at least min distance away",
                                "type": "insertion"
                            },
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957342.203
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i ",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "% constraint total_wild = sum (i ",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709957348.185
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "% constraint total_wild = sum (i ",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in len(x),j in PLACE) (wild[j]) (d[x[i],j] <= move)",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709958965.638
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in len(x),j in PLACE) (wild[j]) (d[x[i],j] <= move)",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in len(x),j in PLACE) (wild[j] /\\ d[x[i],j] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959056.245
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in len(x),j in PLACE) (wild[j] /\\ d[x[i],j] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in length(x),j in PLACE) (wild[j] /\\ d[x[i],j] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959075.287
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "var int : lenx = length (x);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959200.039
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "var int : lenx = length (x);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in length(x),j in PLACE) (wild[j] /\\ d[x[i],j] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[j] /\\ d[x[i],j] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959219.644
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[j] /\\ d[x[i],j] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]] /\\ d[x[i],j] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959231.095
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]] /\\ d[x[i],j] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]] /\\ d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959241.412
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]] /\\ d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint  forall (i in 1..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959353.417
                    },
                    {
                        "edits": [
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE) (wild[LOC[j]]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959365.895
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint  forall (i in 1..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint  forall (i in 1..length(x)-1,j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959368.602
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint  forall (i in 1..length(x)-1,j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE) (wild[LOC[j]]);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint  forall (i in 1..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959374.036
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint  forall (i in 1..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint  forall (i in 0..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 0..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959445.588
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint  forall (i in 0..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 0..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint  forall (i in 1..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959469.709
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint  forall (i in 1..length(x),j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint  forall (i in 1..length(x)-1,j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE) (wild[LOC[j]]);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959498.306
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint  forall (i in 1..length(x)-1,j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "% constraint  forall (i in 1..length(x)-1,j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959520.258
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "% constraint  forall (i in 1..length(x)-1,j in PLACE) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE) (wild[LOC[j]]);",
                                "type": "deletion"
                            },
                            {
                                "line": 29,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]) (d[x[i],LOC[j]] <= move);",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959667.168
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]]) (d[x[i],LOC[j]] <= move);",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959821.654
                    },
                    {
                        "edits": [
                            {
                                "line": 29,
                                "text": "solve maximize total_wild;",
                                "type": "insertion"
                            },
                            {
                                "line": 29,
                                "text": "",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959860.284
                    },
                    {
                        "edits": [
                            {
                                "line": 24,
                                "text": "constraint forall(i in 2..n) (x[i] != base); % every other location cannot be base",
                                "type": "deletion"
                            },
                            {
                                "line": 25,
                                "text": "constraint forall(i in 1..n) (x[i] != base); % every other location cannot be base",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709959995.817
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE where LOC[i] != LOC[j]) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709960242.148
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x),j in PLACE where LOC[i] != LOC[j]) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE where LOC[i] != LOC[j]) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709960277.582
                    },
                    {
                        "edits": [
                            {
                                "line": 27,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE where LOC[i] != LOC[j]) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "deletion"
                            },
                            {
                                "line": 28,
                                "text": "constraint total_wild = sum (i in 1..length(x)-1,j in PLACE where x[i] != LOC[j]) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));",
                                "type": "insertion"
                            }
                        ],
                        "timestamp": 1709960310.533
                    }
                ],
                "snapshot": "enum LOC; % set of locations\nLOC: base; % base location where information is collected\nconstraint assert(base = min(LOC),\"base is not the first mentioned location\\n\");\nint: n; % number of traps available\narray[LOC] of int: wild; % amount of interesting wildlife at each location\narray[LOC] of int: cost; % cost to setup trap at location, -ve means unavailable\nconstraint assert(cost[base] = 0, \"Cost of base location is not 0\\n\");\narray[LOC,LOC] of int: d; % distance from one location to another (symmetric)\nconstraint forall(l1, l2 in LOC where l1 <= l2)(assert(d[l1,l2] = d[l2,l1], \"distance is not symmetric at \\(l1) \\(l2)\\n\"));\nconstraint forall(l in LOC)(assert(d[l,l] = 0, \"self distance for \\(l) is not zero\\n\"));\nint: move; % movement distance of animals\nint: link; % wireless link maximum communication distance;\nint: mind; % mininum distance between two traps\nint: opcost; % cost to maintain/operate camera trap\nint: budget; % total budget for traps\n\nset of int: PLACE0 = 0..n;\nset of int: PLACE = 1..n;\narray[PLACE0] of var LOC: x; % location where camera trap is placed (except 0)\narray[PLACE] of var PLACE0: s; % location to send info (part C only)\nvar int: total_wild;\n\nconstraint x[0] = base; % first location has to be base\nconstraint forall(i in 1..n) (x[i] != base); % every other location cannot be base\nconstraint forall (i in PLACE) (s[i] = 0); % set all s to 0\nconstraint forall (i in PLACE,j in PLACE where i!=j) (d[x[i],x[j]] >= mind); % double for loop through the matrix, ignoring itself and making sure that each locations within x are at least min distance away\nconstraint total_wild = sum (i in 1..length(x)-1,j in PLACE where x[i] != LOC[j]) (wild[LOC[j]] * bool2int(d[x[i],LOC[j]] <= move));\n\nsolve maximize total_wild;\n\n\n"
            }
        },
        "parent": null,
        "uuid": "d47f9770-a200-84e9-26d5-3c02d1905e81"
    },
    "modelAssignments": [
        {
            "id": "X85WR2k7a8",
            "model": "models/animal.mzn",
            "name": "Animal Model 1"
        }
    ],
    "moocName": "FIT5216 S1 2024",
    "moocPasswordString": "Submission token",
    "name": "Assignment 1 Wildlife Monitor",
    "sendMeta": true,
    "solutionAssignments": [
        {
            "data": "data/animal01.dzn",
            "id": "A6Vdej10tJ",
            "model": "models/animal.mzn",
            "name": "Animal 1",
            "timeout": "60"
        },
        {
            "data": "data/animal02.dzn",
            "id": "WtNRqcoeBL",
            "model": "models/animal.mzn",
            "name": "Animal 2",
            "timeout": "60"
        },
        {
            "data": "data/animal03.dzn",
            "id": "Jl0JqlQPSB",
            "model": "models/animal.mzn",
            "name": "Animal 3",
            "timeout": "60"
        },
        {
            "data": "data/animal04.dzn",
            "id": "htwj1zkCSx",
            "model": "models/animal.mzn",
            "name": "Animal 4",
            "timeout": "60"
        },
        {
            "data": "data/animal05.dzn",
            "id": "BfiQkPXG1Z",
            "model": "models/animal.mzn",
            "name": "Animal 5",
            "timeout": "60"
        },
        {
            "data": "data/animal06.dzn",
            "id": "OxjUR85rar",
            "model": "models/animal.mzn",
            "name": "Animal 6",
            "timeout": "60"
        },
        {
            "data": "data/animal07.dzn",
            "id": "jr0CGLSpoI",
            "model": "models/animal.mzn",
            "name": "Animal 7",
            "timeout": "60"
        },
        {
            "data": "data/animal08.dzn",
            "id": "RRR5fkG1cD",
            "model": "models/animal.mzn",
            "name": "Animal 8",
            "timeout": "60"
        },
        {
            "data": "data/animal09.dzn",
            "id": "TrUkP9KBHP",
            "model": "models/animal.mzn",
            "name": "Animal 9",
            "timeout": "60"
        },
        {
            "data": "data/animal10.dzn",
            "id": "LaavKJsKI5",
            "model": "models/animal.mzn",
            "name": "Animal 10",
            "timeout": "60"
        }
    ],
    "submissionTerms": "This is an individual assignment. Your submission has to be entirely your own work. We will use similarity detection software to detect any attempt at collusion, and the penalties are quite harsh. If in doubt, contact your teaching team with any questions! You may not use large language models such as ChatGPT for any part of this assignment\r\n",
    "submissionURL": "https://autograder.optimisation-2020.cloud.edu.au/api/index.php"
}
